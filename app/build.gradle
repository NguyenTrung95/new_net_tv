apply from: '../constants.gradle'
apply from: '../versions.gradle'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

kapt {
    generateStubs = true
    correctErrorTypes true
}


android {
    compileSdkVersion project.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        versionName project.ext.releaseVersion
        versionCode project.ext.releaseVersionCode
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.appTargetSdkVersion
        multiDexEnabled true

    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles = [
                    "proguard-rules.txt",
                    getDefaultProguardFile('proguard-android.txt')
            ]
        }
        debug {
            jniDebuggable = true
        }
    }

    lintOptions {
        // The demo app isn't indexed, doesn't have translations, and has a
        // banner for AndroidTV that's only in xhdpi density.
        disable 'GoogleAppIndexingWarning','MissingTranslation','IconDensities'
    }

    flavorDimensions "extensions"

    productFlavors {
        noExtensions {
            dimension "extensions"
        }
        withExtensions {
            dimension "extensions"
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'

    }

    aaptOptions {
        cruncherEnabled = false
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                   def time = new Date().format("HH'h'mm")
                   def newName = output.outputFile.name
                    newName = newName.replace("app", "Nencer")
                    newName = newName.replace("-release", "_$variant.versionName($variant.versionCode)_$time")
                    outputFileName = newName
                }
            }


        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //multiscreen
    implementation 'com.intuit.sdp:sdp-android:1.0.5'

    //Androidx
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

    //koin
    implementation "org.koin:koin-androidx-scope:2.0.1"
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"
    implementation "org.koin:koin-androidx-ext:2.0.1"

    //okhttp + retrofit(2.6.0)
    implementation("com.squareup.okhttp3:logging-interceptor:4.0.0")
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //Android KTX  Kotlin ï¼Œ Android Jetpack
    implementation 'androidx.core:core-ktx:1.2.0'

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha02'


    //paginate
    implementation 'com.github.markomilos:paginate:0.5.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'

    //Optional: see how to use the utility.
    implementation 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'me.abhinay.input:currency-edittext:1.1'
    implementation 'com.github.drawers:SpinnerDatePicker:2.0.1'

    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13' //Thanks for using https://jar-download.com
    implementation group: 'commons-net', name: 'commons-net', version: '3.6'
    implementation group: 'org.codehaus.jackson', name: 'jackson-smile', version: '1.9.13'
    implementation group: 'asm', name: 'asm-all', version: '2.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.5.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.github.zjywill:OverwatchProgress:1.5'
    implementation 'com.facebook.shimmer:shimmer:0.4.0'
    implementation(name: 'avanlib', ext: 'aar')

    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.runtime_ktx
    implementation deps.fragment.runtime_ktx
    // "androidx.fragment:fragment-testing" must be scoped to all sourcesets.
    implementation(deps.fragment.testing)

    // Espresso and UI Testing
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents
    androidTestImplementation deps.navigation.testing
    androidTestImplementation deps.truth

    // Host-side tests
    testImplementation deps.atsl.ext_junit
    testImplementation deps.robolectric
    // Espresso API running in Robolectric
    testImplementation deps.espresso.core
    testImplementation deps.espresso.contrib
    testImplementation deps.espresso.intents
    testImplementation deps.navigation.testing
    testImplementation deps.truth

}
